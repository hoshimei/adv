# Refresh ALL scripts on adv update
name: Observation (Full)

on:
  release:
    types:
      # Only catch released versions
      - released
  workflow_dispatch:
    inputs:
      revision:
        description: 'Octo revision'
        required: false
        default: 'none'
        type: string
      forced:
        description: 'Forced regenerate'
        required: false
        default: false
        type: boolean
      skipAdv:
        description: 'Skip adv update'
        required: false
        default: false
        type: boolean
      skipSud:
        description: 'Skip sud update'
        required: false
        default: false
        type: boolean
      skipSpi:
        description: 'Skip spi update'
        required: false
        default: false
        type: boolean

jobs:
  adv_observe_full:
    if: inputs.skipAdv != true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Build package
        run: |
          npx pnpm install
          npx pnpm install @aws-sdk/client-s3@3.574.0
          npm run build
      - name: Update all items
        run: node observer/full.mjs
        env:
          ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
          ASSETS_BUCKET_NAME: ${{ secrets.ASSETS_BUCKET_NAME }}
          BACKEND_MANAGE_READ_KEY: ${{ secrets.BACKEND_MANAGE_READ_KEY }}
          BACKEND_MANAGE_WRITE_KEY: ${{ secrets.BACKEND_MANAGE_WRITE_KEY }}
          S3_ENDPOINT: ${{ secrets.S3_ENDPOINT }}
          S3_REGION: ${{ secrets.S3_REGION }}
          SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
          UPSTREAM_BASE_DOMAIN: ${{ secrets.UPSTREAM_BASE_DOMAIN }}
          OCTO_REVISION: ${{ inputs.revision }}
          FORCED: ${{ inputs.forced }}

  sud_observe_full:
    if: inputs.skipSud != true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'outloudvi/idoly-assets-curator'
          ref: 'observer'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pipenv'
      - name: Install dependencies
        run: |
          bash install.sh
          pip install pipenv --user
          pipenv install
      - run: pipenv run python observe_sud.py
        env:
          B2_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
          B2_APP_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
          B2_BUCKET_NAME: ${{ secrets.ASSETS_BUCKET_NAME }}
          B2_ENDPOINT_URL: ${{ secrets.S3_ENDPOINT }}
          B2_REGION: ${{ secrets.S3_REGION }}
          API_SECRET: ${{ secrets.BACKEND_MANAGE_READ_KEY }}
          UPSTREAM_BASE_DOMAIN: ${{ secrets.UPSTREAM_BASE_DOMAIN }}
          OCTO_REVISION: ${{ inputs.revision }}
          FORCED: ${{ inputs.forced }}

  spi_observe_full:
    if: inputs.skipSpi != true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'outloudvi/idoly-assets-curator'
          ref: 'observer'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pipenv'
      - name: Install dependencies
        run: |
          pip install pipenv --user
          pipenv install
      - run: pipenv run python observe_spi.py
        env:
          B2_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
          B2_APP_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
          B2_BUCKET_NAME: ${{ secrets.ASSETS_BUCKET_NAME }}
          B2_ENDPOINT_URL: ${{ secrets.S3_ENDPOINT }}
          B2_REGION: ${{ secrets.S3_REGION }}
          API_SECRET: ${{ secrets.BACKEND_MANAGE_READ_KEY }}
          UPSTREAM_BASE_DOMAIN: ${{ secrets.UPSTREAM_BASE_DOMAIN }}
          OCTO_REVISION: ${{ inputs.revision }}
          FORCED: ${{ inputs.forced }}
